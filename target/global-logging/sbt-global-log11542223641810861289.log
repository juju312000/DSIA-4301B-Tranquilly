[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\theov\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\theov\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (AdoptOpenJDK Java 11.0.7)
[debug]       Load.loadUnit: plugins took 96.5285ms
[debug]       Load.loadUnit: defsScala took 0.5266ms
[debug] [Loading] Scanning directory C:\Users\theov\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\theov\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.2593 ms
[debug]           Load.resolveProject(global-plugins) took 59.3657ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\theov\.sbt\1.0\plugins, plugins: List(<none>))) took 109.887ms
[debug] [Loading] Done in C:\Users\theov\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 133.6083ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.269ms
[debug]     Load.loadUnit(file:/C:/Users/theov/.sbt/1.0/plugins/, ...) took 241.6662ms
[debug]   Load.apply: load took 444.524ms
[debug]   Load.apply: resolveProjects took 15.0444ms
[debug]   Load.apply: finalTransforms took 80.2195ms
[debug]   Load.apply: config.delegates took 8.3008ms
[debug]   Load.apply: Def.make(settings)... took 498.1624ms
[debug]   Load.apply: structureIndex took 123.1678ms
[debug]   Load.apply: mkStreams took 1.9708ms
[info] loading global plugins from C:\Users\theov\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3299.4033ms
[debug]           Load.loadUnit: plugins took 36.9869ms
[debug]           Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory D:\Documents\Cours\ESIEE\E4\Semestre 2\Data engineering\microservice\project
[debug]             Load.loadUnit: mkEval took 8.6809ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Documents\Cours\ESIEE\E4\Semestre 2\Data engineering\microservice\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9831 ms
[info] loading settings for project microservice-build from idea.sbt ...
[debug]               Load.resolveProject(microservice-build) took 6.9051ms
[debug]             Load.loadTransitive: finalizeProject(Project(id microservice-build, base: D:\Documents\Cours\ESIEE\E4\Semestre 2\Data engineering\microservice\project, plugins: List(<none>))) took 9.8569ms
[debug] [Loading] Done in D:\Documents\Cours\ESIEE\E4\Semestre 2\Data engineering\microservice\project, returning: (microservice-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 248.4582ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.5154ms
[debug]         Load.loadUnit(file:/D:/Documents/Cours/ESIEE/E4/Semestre%202/Data%20engineering/microservice/project/, ...) took 291.292ms
[debug]       Load.apply: load took 293.1721ms
[debug]       Load.apply: resolveProjects took 0.1322ms
[debug]       Load.apply: finalTransforms took 9.8736ms
[debug]       Load.apply: config.delegates took 0.4018ms
[debug]       Load.apply: Def.make(settings)... took 97.7329ms
[debug]       Load.apply: structureIndex took 30.0563ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from D:\Documents\Cours\ESIEE\E4\Semestre 2\Data engineering\microservice\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 7068.8895ms
[debug]     Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory D:\Documents\Cours\ESIEE\E4\Semestre 2\Data engineering\microservice
[debug]       Load.loadUnit: mkEval took 0.3829ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Documents\Cours\ESIEE\E4\Semestre 2\Data engineering\microservice, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2191 ms
[info] loading settings for project microservice from build.sbt ...
[debug]         Load.resolveProject(microservice) took 42.5757ms
[debug]       Load.loadTransitive: finalizeProject(Project(id microservice, base: D:\Documents\Cours\ESIEE\E4\Semestre 2\Data engineering\microservice, plugins: List(<none>))) took 46.3283ms
[debug] [Loading] Done in D:\Documents\Cours\ESIEE\E4\Semestre 2\Data engineering\microservice, returning: (microservice)
[debug]     Load.loadUnit: loadedProjectsRaw took 4141.8812ms
[debug]     Load.loadUnit: cleanEvalClasses took 38.4695ms
[debug]   Load.loadUnit(file:/D:/Documents/Cours/ESIEE/E4/Semestre%202/Data%20engineering/microservice/, ...) took 11250.6087ms
[debug] Load.apply: load took 11259.0323ms
[debug] Load.apply: resolveProjects took 0.1175ms
[debug] Load.apply: finalTransforms took 127.1453ms
[debug] Load.apply: config.delegates took 0.6717ms
[debug] Load.apply: Def.make(settings)... took 204.6473ms
[debug] Load.apply: structureIndex took 33.0133ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to microservice (in build file:/D:/Documents/Cours/ESIEE/E4/Semestre%202/Data%20engineering/microservice/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53698 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53698, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to microservice (in build file:/D:/Documents/Cours/ESIEE/E4/Semestre%202/Data%20engineering/microservice/)
[debug] > Exec(idea-shell, None, None)
